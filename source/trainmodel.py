import sqlite3
import joblib
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import LogisticRegression
from sklearn.pipeline import Pipeline
from nltk.corpus import stopwords
import nltk

conn = sqlite3.connect('knowledgebase.db')
cursor: cursor = conn.cursor()
cursor.execute("SELECT sentence, intent FROM user_intents")
rows: list[str] = cursor.fetchall()

texts: list[str] = [row[0] for row in rows]
labels: list[str] = [row[1] for row in rows]

conn.close()

stop_words_es = stopwords.words("spanish")

model = Pipeline([
    ("tfidf", TfidfVectorizer(stop_words=stop_words_es)),
    ('clf', LogisticRegression(max_iter=10000))
])

model.fit(texts, labels)

joblib.dump(model, "talia_ai_model.pkl")

X = [
    "s√≠", "si", "claro", "claro que s√≠", "vale", "va", "va dale", "ok", "okay", "okey", "perfecto", "de acuerdo", "obvio", 
    "seguro", "s√≠ quiero", "s√≠, dale", "s√≠ porfa", "por supuesto", "afirmativo", "s√≠ se√±or", "s√≠ se√±ora", "as√≠ es", 
    "dale", "eso quiero", "quiero", "acepto", "venga", "sim√≥n", "de una", "me gusta", "eso est√° bien", "todo bien", 
    "excelente", "s√≠, gracias", "bueno", "me sirve", "s√≠, por qu√© no", "s√≠ obvio", "s√≠ jajaja", "dale pues", "si quiero",
    "se hace", "h√°gale", "ya pues", "yeah", "yes", "listo", "est√° bien", "se aprueba", "yes please", "me encanta",

    "no", "nop", "no gracias", "mejor no", "ni hablar", "no quiero", "rechazo", "negativo", "nunca", "no porfa", 
    "nah", "ni loco", "no gracias jajaja", "noup", "nel", "ni merda", "olv√≠dalo", "nope", "nonono", "definitivamente no",
    "jam√°s", "ni cagando", "nunca en la vida", "no es necesario", "no hace falta", "no me interesa", "ni en pedo",
    "cero ganas", "para nada", "estoy bien as√≠", "estoy bien, gracias", "paso", "no por ahora", "tal vez despu√©s", "me abstengo",
    "prefiero que no", "prefiero no hacerlo", "no, gracias", "no deseo", "nah bro", "ya fue", "siguiente", "rechazado",

    "te quiero", "naranja", "jajaja", "xd", "wtf", "quiero tacos", "hoy es lunes", "me duele la cabeza", "no s√©", 
    "tal vez", "ni idea", "supongo", "quiz√°", "qui√©n sabe", "perro", "taco", "lol", "qu√©?", "ni me acuerdo", "ayuda", 
    "eso qu√©", "super", "incre√≠ble", "dame m√°s", "no importa", "ay si si", "qu√© dices", "uff", "shakira", "te amo", 
    "qui√©n eres t√∫", "no entiendo", "mmm", "khe", "asdf", "hola", "buenas", "todo cool", "me da igual", "sin comentarios",
    "ü•≤", "üòÖ", "üôÉ", "üê∏", "‚ú®", "no lo s√© rick", "ok pero no", "puede ser", "quiero llorar", "uwu", "asdfgh", "lalala", "zzz", "123", "jeje", "üíÄ"
]

y = [
    *["affirmative"] * 50,
    *["negative"] * 50,
    *["other"] * 50,
]

pipeline = Pipeline([
    ("tfidf", TfidfVectorizer(stop_words=stop_words_es, ngram_range=(1, 2))),
    ("clf", LogisticRegression(max_iter=10000))
])

pipeline.fit(X, y)

joblib.dump(pipeline, "reply_classifier.pkl")

print("Modelos entrenados exitosamente")